name: Build and Deploy
on: [push]

jobs:
 test:
   runs-on: ubuntu-latest
   permissions:
     contents: read
   environment:
     name: test
   steps:
     - uses: actions/checkout@v4
     
     - name: Run tests
       env:
         # ðŸ‘‡ Explicitly mention each secret you want to have provisioned to each job
         TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
         TEST_API_KEY: ${{ secrets.TEST_API_KEY }}
         STRIPE_TEST_KEY: ${{ secrets.STRIPE_TEST_KEY }}
       run: |
         npm install
         npm test

 build:
   needs: test
   runs-on: ubuntu-latest
   permissions:
     contents: read
   environment: 
     name: build
   steps:
     - uses: actions/checkout@v4
     
     - name: Build application
       env:
         # ðŸ‘‡ Explicitly mention each secret you want to have provisioned to each job
         VITE_API_URL: ${{ secrets.VITE_API_URL }}
         VITE_SENTRY_DSN: ${{ secrets.VITE_SENTRY_DSN }}
         NEXT_PUBLIC_ANALYTICS_ID: ${{ secrets.NEXT_PUBLIC_ANALYTICS_ID }}
       run: |
         npm install
         npm run build

 push:
   needs: build
   runs-on: ubuntu-latest
   permissions:
     contents: read
     packages: write
   environment:
     name: production
   steps:
     - uses: actions/checkout@v4
     
     - name: Login and push to Docker Hub
       env:
         # ðŸ‘‡ Explicitly mention each secret you want to have provisioned to each job
         DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
         DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
       run: |
         docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
         docker build -t myorg/myapp:latest .
         docker push myorg/myapp:latest
